Regarding how items display when you enter a room (i.e., what the hereitems
alias should do), we can start by summarizing what the walkthrough showed us.
We learned that the generic "There is ... here." messages of PA3 need to be
customized to the individual messages: "a large boulder", "a ferocious bear",
"a packet of nitric acid", "a packet of glycerine", "a valuable amethyst",
"an emerald bracelet", "a valuable ruby", "a CPU card", "a glass jar", "a bus
driver`s license", "a dinosaur bone", "a shiny brass key", "a silver bar",
"some food", "a shovel", and "a lamp".

Let us observe five things about these customized display messages. To begin,
note that we will not be using the "There is a" directory in this new homework
because the sed command is easily able to add the words "There is a" in the
front of each file name.

Second, notice that the final four items in the list (the silver, the food,
the shovel, and the lamp) did not add an adjective before the noun. As for the
shovel, it displays just as it did in the previous homework. As for the food,
however, the message is "some food" instead of "a food" in the previous PA3.
And as for the lamp, although the message of "a lamp" is just like in PA3,
what comes after it is special: "a lamp nearby." instead of "a lamp here."
As for the silver, although there is no adjective added to the front, the
word "bar" is added to the end: "a silver bar".

Third, consider the "CPU card". The object that this is displayed for is named
"board". So this is the one case where the object name is not part of the
message that is displayed for the object.

Fourth, consider the use of the articles (a/an). In PA3, we needed to add the
"n" to create "an acid" and "an amethyst". In this new homework, these items
don't need an "n" anymore, because they have become "a packet of nitric acid"
and "a valuable amethyst". But there's a new problem, because the new messages
now include "an emerald bracelet". So we need to look for the "a e" pattern.
I will, however, require you to be general and to look for an "a " followed by
any vowel (even though it is technically true that, in the part of the game we
are implementing, we know that the only time we need the "an" article is for
the case of a next word that starts with an "e").

Fifth, consider again the acid and the glycerine. These two items can be put
into the jar, and they display differently in that case. The walkthrough
demonstrated their behavior:
   % grep -A4 "jar here" PA4walkthrough.txt | tail -5
      There is a glass jar here.
      The jar contains:
           There is a packet of glycerine here.
           There is a packet of nitric acid here.
      >
   %

So the behavior was to get an extra line "The jar contains", and then to put
five spaces in front of these items.

Now the way that we will implement this is to make a directory for the jar.
Consider:
  % cd ~/PA2assignment/allroomdirsandfile
  % ls  [abfgjklrs]*[^tg][pterodactyl]
  acid      bear        board  boulder   food       jar  lamp    ruby   silver
  amethyst  blackboard  bone   bracelet  glycerine  key  license shovel
  %

As we see above, there is a single wildcard pattern that lists all of the
objects that need to display. (It also lists one of the other objects, the
blackboard, but we can get rid of that object later.)

Now that we are in the allroomdirsandfile directory, let's look at the jar.
  % cat jar
  It is a plain glass jar.
  %

As we see above, the earlier homeworks treated the jar as an ordinary file.

Next, let's suppose that the we have already been able to implement the new
hereitems alias. Then we could run it from this allroomdirsandfile directory
to get:
  % hereitems
  There is a packet of nitric acid here.
  There is a valuable amethyst here.
  There is a ferocious bear here.
  There is a CPU card here.
  There is a dinosaur bone here.
  There is a large boulder here.
  There is an emerald bracelet here.
  There is a food here.
  There is a packet of glycerine here.
  There is a glass jar here.
  There is a shiny brass key here.
  There is a lamp nearby.
  There is a bus driver`s license here.
  There is a valuable ruby here.
  There is a shovel here.
  There is a silver bar here.
  %

But in this new homework, we are concerned with how to put the acid and the
glycerine into the jar (these are the only two items that can be put in the
jar). The way that we will implement this behavior is to turn the jar into a
directory. We can test this behavior by changing the jar in the allroomdirsand
directory, like this:
  % rm jar
  % mkdir jar
  % ls [abfgjklrs]*[^tg][pterodactyl]
  acid      bear        board  boulder   food       key   license  shovel
  amethyst  blackboard  bone   bracelet  glycerine  lamp  ruby     silver

  jar:
  %
  % mv acid glycerine jar
  % ls [abfgjklrs]*[^tg][pterodactyl]
  amethyst  blackboard  bone     bracelet  key   license  shovel
  bear      board       boulder  food      lamp  ruby     silver

  jar:
  acid  glycerine
  %

From the above, we see that the jar's contents display below a "jar:" line.
This line is already similar to the "The jar contains:" line from the game.
Let's look again at the above "ls [abfgjklrs]*[^tg][pterodactyl]", but with
the result piped out, so that we can see the way it displays:
  % ls [abfgjklrs]*[^tg][pterodactyl] | cat
  amethyst
  bear
  blackboard
  board
  bone
  boulder
  bracelet
  food
  key
  lamp
  license
  ruby
  shovel
  silver

  jar:
  acid
  glycerine
  %

So let's run the alias again, for this new type of jar directory:
  % hereitems
  There is a valuable amethyst here.
  There is a ferocious bear here.
  There is a CPU card here.
  There is a dinosaur bone here.
  There is a large boulder here.
  There is an emerald bracelet here.
  There is a food here.
  There is a shiny brass key here.
  There is a lamp nearby.
  There is a bus driver`s license here.
  There is a valuable ruby here.
  There is a shovel here.
  There is a silver bar here.
  There is a glass jar here.
  The jar contains:
       There is a packet of nitric acid here.
       here is a packet of glycerine here.
  %

From the above, we see that each line has had the appropriate text inserted
at the front and at the end of the object name. As for the jar, consider:
  % ls [abfgjklrs]*[^tg][pterodactyl] | tail -5 | head -4
  silver

  jar:
  acid
  % hereitems | tail -5 | head -4
  There is a silver bar here.
  There is a glass jar here.
  The jar contains:
       There is a packet of nitric acid here.
  %

Looking at the above, we see that it is actually the empty line that became
"There is a glass jar here.", while the "jar:" line became "The jar contains:"

One thing that complicates things is knowing when to add the five spaces in
front of the acid or the glycerine:
  % ls [abfgjklrs]*[^tg][pterodactyl] | tail -3
  jar:
  acid
  glycerine
  % hereitems | grep -eacid -eglycerine -ejar
  There is a glass jar here.
  The jar contains:
       There is a packet of nitric acid here.
       here is a packet of glycerine here.
  % mv jar/acid .
  % ls [abfgjklrs]*[^tg][pterodactyl] | tail -3

  jar:
  glycerine
  % hereitems | grep -eacid -eglycerine -ejar
  There is a packet of nitric acid here.
  There is a glass jar here.
  The jar contains:
       here is a packet of glycerine here.
  %

So, how did the above decide to add the five spaces before the glycerine, but
not the acid? The answer is that the glycerine comes after the "jar:" line,
whereas the acid line did not.

But there is also the case of the empty jar:
  % mv jar/glycerine .
  % ls [abfgjklrs]*[^tg][pterodactyl] | tail -3
  silver

  jar:
  % hereitems | grep -eacid -eglycerine -ejar
  There is a packet of nitric acid here.
  There is a packet of glycerine here.
  There is a glass jar here.
  %

In the above case, the empty line still became "There is a glass jar here.",
but the "The jar contains:" lines didn't display because the jar directory
is empty.

OK. So how to implement the "hereitems" alias? At the moment, we will discuss
the implementation using the "alias hereitems='...'" syntax of bash; But, in
the end, we will be using the "alias hereitems '...'" syntax of csh. So, what
is the structure of the alias? It is this:

alias hereitems='ls [abfgjklrs]*[^tg][pterodactyl] | sed 's__1__;s__2__;s__3____;...;s__16__' | tr \\n @ | sed -n 's__17__;...;s__X__'

To explain the above, let us first note that the ";" command allows sed to do
multiple substitutions. That is to say:
  % echo abcdef | sed s/a/A/ | sed s/c/C/ | sed s/e/E/
  AbCdEf
  % echo abcdefg | sed 's/a/A/;s/c/C/;s/e/E/'
  AbCdEf
  %

Now, to complete "hereitems", you must insert a series of sed "s" commands.
Note that you cannot use any commands except the sed "s" command. Here are
the details for implementing those "s" commands:
 __1__:  This adds "packet of " in front of the acid AND the glycerine.
 __2__:  This adds "nitric " in front of acid.
 __3__:  This adds "valuable" in front of the ruby AND the amethyst.
 __4__:  This changes the empty line to "glass jar".
 __5__:  This changes "board" to "CPU card".
 __6__ - __13__: These substitutions each fix one item. But there is a rule:
                 In each case, you must use the & symbol for the substitution.
 __14__: This adds the "There is a " at the front of each line.
 __15__: This turns the "a" to "an" for the emerald bracelet. But the rule is:
         It should be a general solution, that also would work for other words
         that start with vowels (eg, the "axe" that appears in a different
         part of the game).
 __16__: This turns the line that originally was "jar:" to "the jar contains:"

tr \\n @:The purpose of this is to put all the text onto one line. But why do
         we want to do this? The answer has to do with deciding whether to add
         five spaces before the "There is a packet of nitric acid here." or
         the "There is a packet of glycerine here.". To decide whether to add
         the spaces, we have to know whether these items come somewhere after
         a ":". But that ":" was on an earlier line, so the "tr \\n @" puts
         everything on one line (while marking the original line breaks with
         "@" symbols).

 __17__-__X__: Here, use as many substitutions as you need to use in order to:
               1. Add the spaces in front of the things in the jar,
               2. Remove the "The jar contains:" line if the jar is empty.
               3. Don't print anything about the blackboard object (not even
                  printing an empty line).
               4. Turn each @ back into "\n"
               5. Print the result, if it is not empty. (For example, suppose
                  that you go to the classroom, then you get the glycerine,
                  then you leave the room, then you re-enter the classroom.
                  In this case, hereitems should print nothing, not even an
                  empty line.

